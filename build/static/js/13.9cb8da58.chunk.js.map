{"version":3,"sources":["components/Notification/Notification.jsx"],"names":["Notification","props","useState","animateNotify","setAnimateNotify","useEffect","text","className","dNone","onAnimationEnd","newNotification"],"mappings":"uMAkBeA,UAdf,SAAsBC,GAAQ,IAAD,EAEYC,oBAAS,GAFrB,mBAEtBC,EAFsB,KAERC,EAFQ,KAQ3B,OAJFC,qBAAU,WACRD,GAAiB,KACjB,CAACH,EAAMK,OAGL,yBAAKC,UAAS,gCAA2BN,EAAMO,MAAjC,YAA0CL,GAAiB,wBAA0BM,eAAgB,WAAOL,GAAiB,GAAQH,EAAMS,iBAAgB,KAAWT,EAAMK","file":"static/js/13.9cb8da58.chunk.js","sourcesContent":["import React,{ useState,useEffect } from 'react';\nimport './notification.styles.scss';\nimport './notification.responsive.scss';\n\nfunction Notification(props) {\n\n  let [animateNotify,setAnimateNotify] = useState(false);\n\nuseEffect(() => {\n  setAnimateNotify(true)\n},[props.text]);\n\n  return (\n    <div className={`floating-notification ${props.dNone} ${animateNotify && \"animate-notification\"}`} onAnimationEnd={() => {setAnimateNotify(false); props.newNotification(false);}}>{props.text}</div>\n  );\n\n}\n\nexport default Notification;\n"],"sourceRoot":""}